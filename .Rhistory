data = read.table("/Users/Wilson/OneDrive/Dropbox/Nesi/data/leukemia50.txt", header = TRUE)
head(data)
test = data[1:38,]
test[, 1] = factor(test[, 1])
temp14 = h_select_ed6(data, n.indep = 38, tau = 1e-03,
h =  seq(0.6, 1.5, 0.02),
h1.range = c(0.15, 5), h2.range = c(0.15, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14 = h_select_ed6(test, n.indep = 38, tau = 1e-03,
h =  seq(0.6, 1.5, 0.02),
h1.range = c(0.15, 5), h2.range = c(0.15, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14
model14 = density.ed6(data = test, h = 1.02, h1.range = c(0.15, 5),
h2.range = c(0.15, 5), initial.m1 = 5,
initial.m2 = 5, identity.b = FALSE,
tau = 1e-03, n.grid = 100, collapse.tau = 1e-03)
model14
h1 = model$points1$h
h1 = model14$points1$h
h2 = model14$points2$h
h1
h2
density1 = model14$points1
density2 = model14$points2
tables(test[, 1])
table(test[, 1])
prior1 = 27/38
prior2 = 11/38
test.data = data[39:72,]
density1.test = prior1*d.mixmvn(as.matrix(test.data[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test.data[, -1]), density2)
test.data[, 1] = factor(test.data[, 1])
class = levels[test.data[, 1]]
class = levels(test.data[, 1])
class
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test.data[, 1])
result
model14 = density.ed6(data = test, h = 0.68, h1.range = c(0.15, 5),
h2.range = c(0.15, 5), initial.m1 = 5,
initial.m2 = 5, identity.b = FALSE,
tau = 1e-03, n.grid = 100, collapse.tau = 1e-03)
h1 = model14$points1$h
h2 = model14$points2$h
h1
h2
density1 = model14$points1
density2 = model14$points2
density1.test = prior1*d.mixmvn(as.matrix(test.data[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test.data[, -1]), density2)
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test.data[, 1])
result
model14 = density.ed6(data = test, h = 1.1, h1.range = c(0.15, 5),
h2.range = c(0.15, 5), initial.m1 = 5,
initial.m2 = 5, identity.b = FALSE,
tau = 1e-03, n.grid = 100, collapse.tau = 1e-03)
h1 = model14$points1$h
h2 = model14$points2$h
h1
h2
density1 = model14$points1
density2 = model14$points2
density1.test = prior1*d.mixmvn(as.matrix(test.data[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test.data[, -1]), density2)
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test.data[, 1])
result
install.packages("rda")
library(rda)
data(colon)
dim(colon.x)
dim(colon.y)
colon.y
length(colon.y)
table(colon.y)
colon.x[1:5, 1:5]
colon = data.frame(colon.y, colon.x)
dim(colon)
colon[1:5, 1:5]
x = scale(colon[, -1])
colon = data.frame(colon[, 1], x)
sd(data[, 2])
dim(x)
var(c(2, 2))
index1 = leukemia[, 1] == 1
index1 = colon[, 1] == 1
index2 = colon[, 1] == 2
x1 = x[index1,]
x2 = x[index2,]
dim(x1)
dim(x2)
t = numeric(2000)
for(i in 1:2000) {
data1 = x1[, i]
data2 = x2[, i]
t[i] = (mean(data1) - mean(data2))/sqrt(var(data1)/22 + var(data2)/40)
}
t
t.order = order(t, decreasing = TRUE)
t.order[1:10]
x50 = x[, t.order[1:50]]
x50
data50 = data.frame(colon[, 1], x50)
data50
data50[, 1] = factor(data50[, 1])
head(data50)
write.table(data50,
file = "/users/wilson/onedrive/dropbox/R/classification/colon50.txt",
row.names = FALSE)
temp14 = h_select_ed6(data50, n.indep = 10, tau = 1e-03,
h =  1,
h1.range = c(0.15, 5), h2.range = c(0.15, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14 = h_select_ed6(data50, n.indep = 10, tau = 1e-03,
h =  1,
h1.range = c(0.2, 5), h2.range = c(0.2, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14
temp14 = h_select_ed6(data50, n.indep = 10, tau = 1e-03,
h =  2,
h1.range = c(0.2, 5), h2.range = c(0.2, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14
temp14 = h_select_ed6(data50, n.indep = 10, tau = 1e-03,
h =  0.6,
h1.range = c(0.2, 5), h2.range = c(0.2, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14 = h_select_ed6(data50, n.indep = 10, tau = 1e-03,
h =  0.7,
h1.range = c(0.2, 5), h2.range = c(0.2, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14 = h_select_ed6(data50, n.indep = 10, tau = 1e-03,
h =  0.8,
h1.range = c(0.2, 5), h2.range = c(0.2, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14
temp14 = h_select_ed6(data50, n.indep = 10, tau = 1e-03,
h =  1.2,
h1.range = c(0.2, 5), h2.range = c(0.2, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14 = h_select_ed6(data50, n.indep = 10, tau = 1e-03,
h =  1.2,
h1.range = c(0.2, 5), h2.range = c(0.2, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14
temp14 = h_select_ed6(data50, n.indep = 62, tau = 1e-03,
h =  1.2,
h1.range = c(0.2, 5), h2.range = c(0.2, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14 = h_select_ed6(data50, n.indep = 62, tau = 1e-03,
h =  1.2,
h1.range = c(0.2, 5), h2.range = c(0.2, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
createFolds(1:20, 20)
temp14 = h_select_ed6(data50, n.indep = 62, tau = 1e-03,
h =  1.2,
h1.range = c(0.3, 5), h2.range = c(0.3, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14
7/62
temp14 = h_select_ed6(data50, n.indep = 62, tau = 1e-03,
h =  1.3,
h1.range = c(0.3, 5), h2.range = c(0.3, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14
temp14 = h_select_ed6(data50, n.indep = 62, tau = 1e-03,
h =  1.1,
h1.range = c(0.3, 5), h2.range = c(0.3, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14
apply(data50[, -1], 2, sd)
apply(data50[, -1], 2, mean)
temp14 = h_select_ed6(data50, n.indep = 62, tau = 1e-03,
h =  0.9,
h1.range = c(0.3, 5), h2.range = c(0.3, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14
seq(0.7, 1.5, by = 0.2)
seq(0.7, 1.5, by = 0.02)
temp14 = h_select_ed6(data50, n.indep = 62, tau = 1e-03,
h =  seq(0.7, 1.5, by = 0.02),
h1.range = c(0.3, 5), h2.range = c(0.3, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp14
6/62
library(spikeslab)
data(leukemia, package = "spikeslab")
leukemia[1:5, 1:5]
leukemia[, 1]
table(leukemia[1:38, 1])
table(leukemia[, 1])
x = scale(leukemia[, -1])
leukemia = data.frame(leukemia[, 1], x)
sd(leukemia[, 2])
dim(leukemia)
train = leukemia[1:38,]
train[, 1] = factor(train[, 1])
test = leukemia[39:72,]
test[, 1] = factor(test[, 1])
class = levels(test.data[, 1])
class = levels(test[, 1])
class
index0 = train[, 1] == "0"
index1 = train[, 1] == "1"
index0
index1
train0 = train[index0,]
train1 = train[index1,]
dim(train0)
t = numeric(3572)
t[1]
for(i in 2:3572) {
data0 = train0[, i]
data1 = train1[, i]
t[i] = (mean(data0) - mean(data1))/sqrt(var(data0)/27 + var(data1)/11)
}
t.order = order(t, decreasing = TRUE)
t.order[1:10]
c(1:25, 3548:3572)
t.order[c(1:25, 3548:3572)]
train50 = train[, c(1, t.order[c(1:25, 3548:3572)])]
train50[, 1] = factor(train50[, 1])
dim(train50)
temp1 = h_select_ed6(train50, n.indep = 38, tau = 1e-03,
h =  seq(0.6, 1.5, by = 0.02),
h1.range = c(0.15, 5), h2.range = c(0.15, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
library(lsei)
library(nspmix)
library(mvnmix)
library(caret)
library(sn)
source("/Users/Wilson/OneDrive/Dropbox/R/density_estimate.R")
source("/Users/Wilson/OneDrive/Dropbox/R/cross_validation.R")
temp1 = h_select_ed6(train50, n.indep = 38, tau = 1e-03,
h =  seq(0.6, 1.5, by = 0.02),
h1.range = c(0.15, 5), h2.range = c(0.15, 5),
initial.m1 = 5, initial.m2 = 5, n.grid = 100,
collapse.tau = 1e-03, identity.b = FALSE)
temp1
write.table(train50,
file = "/users/wilson/onedrive/dropbox/R/classification/leukemia_train50.txt",
row.names = FALSE)
test50 = test[, c(1, t.order[c(1:25, 3548:3572)])]
test50[, 1] = factor(test50[, 1])
dim(test50)
model1 = density.ed6(data = train50, h = 1.2, h1.range = c(0.15, 5),
h2.range = c(0.15, 5), initial.m1 = 5,
initial.m2 = 5, identity.b = FALSE,
tau = 1e-03, n.grid = 100, collapse.tau = 1e-03)
h1 = model1$points1$h
h2 = model1$points2$h
h1
h2
density1 = model1$points1
density2 = model1$points2
table(test[, 1])
table(train[, 1])
prior1 = 27/38
prior2 = 11/38
density1.test = prior1*d.mixmvn(as.matrix(test[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test[, -1]), density2)
density1.test = prior1*d.mixmvn(as.matrix(test50[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test50[, -1]), density2)
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test[, 1])
result
model1 = density.ed6(data = train50, h = 0.6, h1.range = c(0.15, 5),
h2.range = c(0.15, 5), initial.m1 = 5,
initial.m2 = 5, identity.b = FALSE,
tau = 1e-03, n.grid = 100, collapse.tau = 1e-03)
h1 = model1$points1$h
h2 = model1$points2$h
h1
h2
density1 = model1$points1
density2 = model1$points2
table(train[, 1])
prior1 = 27/38
prior2 = 11/38
density1.test = prior1*d.mixmvn(as.matrix(test50[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test50[, -1]), density2)
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test[, 1])
result
model1 = density.ed6(data = train50, h = 1, h1.range = c(0.15, 5),
h2.range = c(0.15, 5), initial.m1 = 5,
initial.m2 = 5, identity.b = FALSE,
tau = 1e-03, n.grid = 100, collapse.tau = 1e-03)
h1 = model1$points1$h
h2 = model1$points2$h
h1
h2
density1 = model1$points1
density2 = model1$points2
table(train[, 1])
prior1 = 27/38
prior2 = 11/38
density1.test = prior1*d.mixmvn(as.matrix(test50[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test50[, -1]), density2)
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test[, 1])
result
model1 = density.ed6(data = train50, h = 0.9, h1.range = c(0.15, 5),
h2.range = c(0.15, 5), initial.m1 = 5,
initial.m2 = 5, identity.b = FALSE,
tau = 1e-03, n.grid = 100, collapse.tau = 1e-03)
h1 = model1$points1$h
h2 = model1$points2$h
h1
h2
density1 = model1$points1
density2 = model1$points2
table(train[, 1])
prior1 = 27/38
prior2 = 11/38
density1.test = prior1*d.mixmvn(as.matrix(test50[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test50[, -1]), density2)
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test[, 1])
result
model1 = density.ed6(data = train50, h = 1.5, h1.range = c(0.15, 5),
h2.range = c(0.15, 5), initial.m1 = 5,
initial.m2 = 5, identity.b = FALSE,
tau = 1e-03, n.grid = 100, collapse.tau = 1e-03)
h1 = model1$points1$h
h2 = model1$points2$h
h1
h2
density1 = model1$points1
density2 = model1$points2
table(train[, 1])
prior1 = 27/38
prior2 = 11/38
density1.test = prior1*d.mixmvn(as.matrix(test50[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test50[, -1]), density2)
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test[, 1])
result
model1 = density.ed6(data = train50, h = 1.2, h1.range = c(0.15, 5),
h2.range = c(0.15, 5), initial.m1 = 5,
initial.m2 = 5, identity.b = FALSE,
tau = 1e-03, n.grid = 100, collapse.tau = 1e-03)
h1 = model1$points1$h
h2 = model1$points2$h
h1
h2
density1 = model1$points1
density2 = model1$points2
table(train[, 1])
prior1 = 27/38
prior2 = 11/38
density1.test = prior1*d.mixmvn(as.matrix(test50[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test50[, -1]), density2)
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test[, 1])
result
model1 = density.ed6(data = train50, h = 1.3, h1.range = c(0.15, 5),
h2.range = c(0.15, 5), initial.m1 = 5,
initial.m2 = 5, identity.b = FALSE,
tau = 1e-03, n.grid = 100, collapse.tau = 1e-03)
h1 = model1$points1$h
h2 = model1$points2$h
h1
h2
density1 = model1$points1
density2 = model1$points2
table(train[, 1])
prior1 = 27/38
prior2 = 11/38
density1.test = prior1*d.mixmvn(as.matrix(test50[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test50[, -1]), density2)
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test[, 1])
result
model1 = density.ed6(data = train50, h = 1.4, h1.range = c(0.15, 5),
h2.range = c(0.15, 5), initial.m1 = 5,
initial.m2 = 5, identity.b = FALSE,
tau = 1e-03, n.grid = 100, collapse.tau = 1e-03)
h1 = model1$points1$h
h2 = model1$points2$h
h1
h2
density1 = model1$points1
density2 = model1$points2
table(train[, 1])
prior1 = 27/38
prior2 = 11/38
density1.test = prior1*d.mixmvn(as.matrix(test50[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test50[, -1]), density2)
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test[, 1])
result
model1 = density.ed6(data = train50, h = 1.3, h1.range = c(0.15, 5),
h2.range = c(0.15, 5), initial.m1 = 5,
initial.m2 = 5, identity.b = FALSE,
tau = 1e-03, n.grid = 100, collapse.tau = 1e-03)
h1 = model1$points1$h
h2 = model1$points2$h
h1
h2
density1 = model1$points1
density2 = model1$points2
table(train[, 1])
prior1 = 27/38
prior2 = 11/38
density1.test = prior1*d.mixmvn(as.matrix(test50[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test50[, -1]), density2)
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test[, 1])
result
temp1
round(temp1, 3)
str(temp3)
str(temp1)
round(as.matrix(temp1), 3)
round(temp1, 3)
table(train50[, 1])
levels(train50[, 1])
model1 = density.ed6(data = train50, h = 1.2, h1.range = c(0.15, 5),
h2.range = c(0.15, 5), initial.m1 = 5,
initial.m2 = 5, identity.b = FALSE,
tau = 1e-03, n.grid = 100, collapse.tau = 1e-03)
h1 = model1$points1$h
h2 = model1$points2$h
h1
h2
density1 = model1$points1
density2 = model1$points2
table(train50[, 1])
prior1 = 27/38
prior2 = 11/38
density1.test = d.mixmvn(as.matrix(test50[, -1]), density1)
density2.test = d.mixmvn(as.matrix(test50[, -1]), density2)
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test[, 1])
result
density1.test = prior1*d.mixmvn(as.matrix(test50[, -1]), density1)
density2.test = prior2*d.mixmvn(as.matrix(test50[, -1]), density2)
test.result = ifelse(density1.test > density2.test, class[1], class[2])
result = sum(test.result != test[, 1])
result
test.result
temp1
round(temp1[, 1])
round(temp1[, 1], 2)
temp1[, 1]
as.matrix(temp1)
round(temp1$table)
round(temp1$table, 3)
library(shiny)
runApp("/Users/Wilson/downloads/Lite")
library(shiny)
runApp("/Users/Wilson/downloads/Lite")
runApp("/Users/Wilson/downloads/Lite")
library(shiny)
runApp("/Users/Wilson/Lite")
runApp("/Users/Wilson/Lite")
runApp("/Users/Wilson/Lite")
runApp("/Users/Wilson/Lite")
library(shiny)
runApp("/Users/Wilson/Lite")
runApp("/Users/Wilson/Lite")
runApp("/Users/Wilson/Lite")
runApp("/Users/Wilson/Lite")
runApp("/Users/Wilson/Lite")
runApp("/Users/Wilson/downlaod/Lite")
runApp("/Users/Wilson/downlaod/Lite")
runApp("/Users/Wilson/downlaods/Lite")
runApp("/Users/Wilson/downloads/Lite")
runApp("/Users/Wilson/downloads/Lite")
Sys.info()
temp = Sys.info()
temp
str(temp)
temp$sysname
temp@sysname
temp[1]
temp[1] == "Darwin"
sysname(temp)
temp["sysname"]
library(shiny)
runApp("/Users/Wilson/OneDrive/Dropbox/docker/Lite")
runApp("/Users/Wilson/OneDrive/Dropbox/docker/Lite")
Sys.info()["sysname"] == "Windows" | "Linux"
Sys.info()["sysname"]
Sys.info()["sysname"] %in% c("Windows", "Linux")
Sys.info()["sysname"] %in% c("Windows", "Linux", "Darwin")
runApp("/Users/Wilson/OneDrive/Dropbox/docker/Lite")
runApp("/Users/Wilson/Lite")
library(shiny)
runApp("/Users/Wilson/Lite")
